name: Build

on:
  push:
    branches: [ "main" ]
    tags: [ "v*.*.*" ]
    paths-ignore:
      - "README.md"

  pull_request:
    branches: [ "main" ]

permissions:
  contents: write

jobs:
  build:
    runs-on: ubuntu-22.04

    env:
      CC: "gcc-13"
      CXX: "g++-13"
      LDFLAGS: "-static-libstdc++ -static-libgcc -Wl,-rpath=/opt/vacon/lib -Wl,--disable-new-dtags"
      PKG_CONFIG_PATH: "/opt/vacon/lib/pkgconfig"
      CMAKE: "cmake -Wno-dev"

    steps:
    - name: Checkout Vacon
      uses: actions/checkout@v4

    - name: Checkout LibDataChannel
      uses: actions/checkout@v4
      with:
        repository: paullouisageneau/libdatachannel
        submodules: recursive
        path: libdatachannel

    - name: Checkout SDL3
      uses: actions/checkout@v4
      with:
        repository: libsdl-org/SDL
        ref: "prerelease-3.1.1"
        path: sdl

    - name: Checkout VPL
      uses: actions/checkout@v4
      with:
        repository: intel/libvpl
        ref: "v2.10.2"
        path: libvpl

    - name: Checkout oneVPL-intel-gpu
      uses: actions/checkout@v4
      with:
        repository: oneapi-src/oneVPL-intel-gpu
        ref: "intel-onevpl-24.2.0"
        path: oneVPL-intel-gpu

    - name: Install meson and ninja
      run: |
        sudo pip install meson ninja

    - name: Install system dependencies
      run: |
        sudo apt-get update -y
        sudo apt-get install -y --no-install-recommends -V \
          build-essential \
          ca-certificates \
          chrpath \
          cmake \
          debhelper \
          git \
          libdrm-dev \
          libdwarf-dev \
          libegl-dev \
          libelf-dev \
          libfontconfig-dev \
          libopengl-dev \
          libssl-dev \
          libva-dev \
          libwayland-dev \
          libx11-dev \
          libx11-xcb-dev \
          libxcb-dri3-dev \
          libxcb-present-dev \
          libxkbcommon-dev \
          linux-libc-dev \
          nlohmann-json3-dev \
          pkg-config \
          wayland-protocols \
        ;

    - name: Configure package manager with Debian sources
      run: |
        sudo apt-get install -y --no-install-recommends -V debian-archive-keyring
        sudo ln -sf /usr/share/keyrings/debian-archive-keyring.gpg /etc/apt/trusted.gpg.d/
        echo "deb http://deb.debian.org/debian/ sid main" | sudo tee /etc/apt/sources.list.d/debian-sid.list
        echo "deb-src http://deb.debian.org/debian/ experimental main" | sudo tee /etc/apt/sources.list.d/debian-experimental.list
        echo -e "Package: *\nPin: release o=Debian\nPin-Priority: -10" | sudo tee /etc/apt/preferences.d/99-local-debian
        sudo apt-get update

    - name: Install libsdl3 build dependencies
      run: |
        sudo apt-get install -y --no-install-recommends -V libdecor-0-dev/unstable
        sudo apt-get build-dep -y libsdl3-dev

    - name: Build LibDataChannel
      working-directory: "./libdatachannel"
      run: |
        cmake -B build -G Ninja \
          --install-prefix /opt/vacon \
          -DCMAKE_BUILD_TYPE=RelWithDebInfo \
          -DCMAKE_C_FLAGS_RELWITHDEBINFO="-O2 -ggdb3 -fno-omit-frame-pointer" \
          -DCMAKE_CXX_FLAGS_RELWITHDEBINFO="-O2 -ggdb3 -fno-omit-frame-pointer" \
          -DUSE_SYSTEM_JSON=ON \
          -DNO_EXAMPLES=ON \
          -DNO_TESTS=ON \
        ;
        ninja -v -C build
        sudo ninja -C build install

    - name: Build SDL3
      working-directory: "./sdl"
      run: |
        cmake -B build -G Ninja \
          --install-prefix /opt/vacon \
          -DCMAKE_BUILD_TYPE=RelWithDebInfo \
          -DCMAKE_C_FLAGS_RELWITHDEBINFO="-O2 -ggdb3 -fno-omit-frame-pointer" \
          -DCMAKE_FIND_USE_PACKAGE_REGISTRY=OFF \
          -DCMAKE_INSTALL_RUNSTATEDIR=/run \
          -DCMAKE_SKIP_INSTALL_ALL_DEPENDENCY=ON \
          -DSDL_ALSA=OFF \
          -DSDL_ALSA_SHARED=OFF \
          -DSDL_CAMERA=OFF \
          -DSDL_DISABLE_INSTALL_DOCS=ON \
          -DSDL_HAPTIC_DEFAULT=OFF \
          -DSDL_HIDAPI_DEFAULT=OFF \
          -DSDL_HIDAPI_LIBUSB_SHARED=OFF \
          -DSDL_INSTALL_TESTS=ON \
          -DSDL_JACK=OFF \
          -DSDL_JACK_SHARED=OFF \
          -DSDL_JOYSTICK_DEFAULT=OFF \
          -DSDL_KMSDRM=OFF \
          -DSDL_KMSDRM_SHARED=OFF \
          -DSDL_OFFSCREEN=OFF \
          -DSDL_OPENGL=ON \
          -DSDL_OPENGLES=ON \
          -DSDL_OSS=OFF \
          -DSDL_PIPEWIRE=ON \
          -DSDL_PIPEWIRE_SHARED=ON \
          -DSDL_POWER_DEFAULT=OFF \
          -DSDL_PULSEAUDIO=ON \
          -DSDL_PULSEAUDIO_SHARED=ON \
          -DSDL_RENDER_VULKAN=OFF \
          -DSDL_RPATH=OFF \
          -DSDL_RPI=OFF \
          -DSDL_SENSOR_DEFAULT=OFF \
          -DSDL_SHARED=ON \
          -DSDL_STATIC=OFF \
          -DSDL_TESTS=OFF \
          -DSDL_TEST_LIBRARY=OFF \
          -DSDL_VIVANTE=OFF \
          -DSDL_VULKAN=OFF \
          -DSDL_WAYLAND=ON \
          -DSDL_WAYLAND_LIBDECOR=ON \
          -DSDL_WAYLAND_LIBDECOR_SHARED=ON \
          -DSDL_WAYLAND_SHARED=ON \
          -DSDL_X11=ON \
          -DSDL_X11_SHARED=ON \
        ;
        ninja -v -C build
        sudo ninja -C build install

    - name: Build VPL
      working-directory: "./libvpl"
      run: |
        cmake -B build -G Ninja \
          --install-prefix /opt/vacon \
          -DCMAKE_BUILD_TYPE=RelWithDebInfo \
          -DCMAKE_C_FLAGS_RELWITHDEBINFO="-O2 -ggdb3 -fno-omit-frame-pointer" \
          -DCMAKE_CXX_FLAGS_RELWITHDEBINFO="-O2 -ggdb3 -fno-omit-frame-pointer" \
          -DCMAKE_INSTALL_LIBDIR=lib \
          -DBUILD_DISPATCHER=ON \
          -DBUILD_DISPATCHER_ONEVPL_EXPERIMENTAL=ON \
          -DBUILD_EXAMPLES=OFF \
          -DBUILD_SHARED_LIBS=ON \
          -DBUILD_TESTS=OFF \
          -DBUILD_TOOLS=OFF \
          -DENABLE_DRI3=ON \
          -DENABLE_DRM=ON \
          -DENABLE_VA=ON \
          -DENABLE_WAYLAND=ON \
          -DENABLE_X11=ON \
          -DINSTALL_EXAMPLE_CODE=OFF \
        ;
        ninja -v -C build
        sudo ninja -C build install
        sudo rm -vrf \
          /opt/vacon/etc \
          /opt/vacon/share/vpl/examples \
        ;
        sudo sed -i -e 's,-lstdc++,,g' /opt/vacon/lib/pkgconfig/vpl.pc

    - name: Build Vacon
      run: |
        meson setup build \
          --default-library static \
          --prefix /opt/vacon \
          --libdir lib \
          --cmake-prefix-path /opt/vacon \
          -Donevpl_priority_path=/opt/vacon/lib \
        ;
        meson compile -v -C build
        chrpath --replace /opt/vacon/lib build/vacon
        mkdir -p /opt/vacon/bin
        sudo install -m 0755 build/vacon /opt/vacon/bin/vacon

    - name: Build oneVPL-intel-gpu
      working-directory: "./oneVPL-intel-gpu"
      run: |
        cmake -B build -G Ninja \
          --install-prefix /opt/vacon \
          -DCMAKE_BUILD_TYPE=Release \
          -DCMAKE_C_FLAGS_RELEASE="-O3 -fno-omit-frame-pointer" \
          -DCMAKE_CXX_FLAGS_RELEASE="-O3 -fno-omit-frame-pointer" \
        ;
        ninja -v -C build
        sudo ninja -C build install

    - name: Prepare Debian packaging
      run: |
        if [ "$GITHUB_REF_TYPE" = "tag" ]; then
          VERSION="$(echo $GITHUB_REF_NAME | sed -e 's/^v//')"
        else
          VERSION="0"
        fi
        VERSION="$VERSION+$(date +%Y%m%d)+git$(git rev-parse --short HEAD)"
        echo "VERSION is $VERSION"
        mkdir -p ./deb/vacon/opt
        cp -av /opt/vacon ./deb/vacon/opt/
        cp -av .packaging/debian ./deb/vacon
        sed \
          -e "s,%VERSION%,$VERSION,g" \
          -e "s/%USER%/$(whoami)/g" \
          -e "s/%NODE%/$(uname -n)/g" \
          -e "s/%DATE%/$(date -R)/g" \
          ./deb/vacon/debian/changelog.in > ./deb/vacon/debian/changelog

    - name: Build Debian package
      working-directory: "./deb/vacon"
      run: |
        dpkg-buildpackage -B -us -uc

    - name: Inspect Debian package
      working-directory: "./deb"
      run: |
        dpkg-deb -I vacon_*.deb
        dpkg-deb -c vacon_*.deb

    - name: Upload Debian package to artifact storage
      uses: actions/upload-artifact@v4
      with:
        name: vacon-binary-deb
        path: deb/vacon_*.deb
        compression-level: 0

    - name: Release
      uses: softprops/action-gh-release@v1
      if: startsWith(github.ref, 'refs/tags/')
      with:
        files: |
          deb/vacon_*.deb
        fail_on_unmatched_files: true
